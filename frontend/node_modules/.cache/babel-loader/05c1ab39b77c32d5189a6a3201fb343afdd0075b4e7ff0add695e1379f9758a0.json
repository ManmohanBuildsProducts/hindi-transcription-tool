{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\n// Get API base URL from environment variable\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingId, setRecordingId] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState({\n    microphone: 'unchecked',\n    systemAudio: 'unchecked'\n  });\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [audioSource, setAudioSource] = useState('microphone'); // 'microphone', 'system', or 'combined'\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Recording references\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n  const durationTimer = useRef(null);\n  const micStream = useRef(null);\n  const systemStream = useRef(null);\n  const combinedStream = useRef(null);\n  useEffect(() => {\n    fetchRecordings();\n    checkAudioDevices();\n  }, []);\n  useEffect(() => {\n    if (isRecording) {\n      durationTimer.current = setInterval(() => {\n        setRecordingDuration(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(durationTimer.current);\n      setRecordingDuration(0);\n    }\n    return () => clearInterval(durationTimer.current);\n  }, [isRecording]);\n  const fetchRecordings = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/recordings`);\n      if (!response.ok) throw new Error('Failed to fetch recordings');\n      const data = await response.json();\n      setRecordings(data.recordings || []);\n    } catch (error) {\n      console.error('Error fetching recordings:', error);\n      setError('Failed to load recordings. Please check your network connection.');\n    }\n  };\n  const checkAudioDevices = async () => {\n    try {\n      // Check browser support for basic audio\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setDeviceStatus({\n          microphone: 'unavailable',\n          systemAudio: 'unavailable'\n        });\n        setError('Audio recording is not supported in your browser. Please use Chrome, Firefox, or Edge.');\n        return false;\n      }\n\n      // Check microphone availability\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          }\n        });\n\n        // Stop all tracks after checking\n        stream.getTracks().forEach(track => track.stop());\n        setDeviceStatus(prev => ({\n          ...prev,\n          microphone: 'available'\n        }));\n      } catch (err) {\n        console.error('Microphone check error:', err);\n        if (err.name === 'NotAllowedError' || err.name === 'PermissionDeniedError') {\n          setError('Microphone access denied. Please allow microphone access in your browser settings.');\n        } else {\n          setError('Could not access microphone. Please check your microphone connection.');\n        }\n        setDeviceStatus(prev => ({\n          ...prev,\n          microphone: 'unavailable'\n        }));\n      }\n\n      // Check system audio availability (via desktop capture)\n      try {\n        if (navigator.mediaDevices.getDisplayMedia) {\n          setDeviceStatus(prev => ({\n            ...prev,\n            systemAudio: 'available'\n          }));\n        } else {\n          setDeviceStatus(prev => ({\n            ...prev,\n            systemAudio: 'unavailable'\n          }));\n          console.warn('System audio capture not supported in this browser');\n        }\n      } catch (err) {\n        console.error('System audio check error:', err);\n        setDeviceStatus(prev => ({\n          ...prev,\n          systemAudio: 'unavailable'\n        }));\n      }\n      return true;\n    } catch (err) {\n      console.error('Device check error:', err);\n      setError('Could not check audio devices. Please reload the page.');\n      setDeviceStatus({\n        microphone: 'unavailable',\n        systemAudio: 'unavailable'\n      });\n      return false;\n    }\n  };\n  const getMicrophoneStream = async () => {\n    try {\n      return await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n    } catch (err) {\n      console.error('Error getting microphone stream:', err);\n      throw new Error('Could not access microphone');\n    }\n  };\n  const getSystemAudioStream = async () => {\n    try {\n      // Request desktop capture with audio\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n\n      // If no audio track, throw error\n      if (!stream.getAudioTracks().length) {\n        stream.getTracks().forEach(track => track.stop());\n        throw new Error('No system audio selected. Please select \"Share audio\" when sharing your screen.');\n      }\n\n      // Stop video tracks, we only need audio\n      stream.getVideoTracks().forEach(track => track.stop());\n      return stream;\n    } catch (err) {\n      console.error('Error getting system audio stream:', err);\n      throw new Error(err.message || 'Could not access system audio');\n    }\n  };\n  const startRecording = async () => {\n    try {\n      setError(null);\n      audioChunks.current = [];\n\n      // Stop any existing streams\n      if (micStream.current) {\n        micStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (systemStream.current) {\n        systemStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (combinedStream.current) {\n        combinedStream.current.getTracks().forEach(track => track.stop());\n      }\n      micStream.current = null;\n      systemStream.current = null;\n      combinedStream.current = null;\n      let stream;\n\n      // Get the appropriate stream based on audio source\n      if (audioSource === 'microphone') {\n        micStream.current = await getMicrophoneStream();\n        stream = micStream.current;\n      } else if (audioSource === 'system') {\n        systemStream.current = await getSystemAudioStream();\n        stream = systemStream.current;\n      } else if (audioSource === 'combined') {\n        // Get both streams\n        micStream.current = await getMicrophoneStream();\n        systemStream.current = await getSystemAudioStream();\n\n        // Combine audio tracks from both streams\n        const audioContext = new AudioContext();\n        const micSource = audioContext.createMediaStreamSource(micStream.current);\n        const systemSource = audioContext.createMediaStreamSource(systemStream.current);\n        const destination = audioContext.createMediaStreamDestination();\n\n        // Connect sources to destination\n        micSource.connect(destination);\n        systemSource.connect(destination);\n\n        // Use the combined stream\n        combinedStream.current = destination.stream;\n        stream = combinedStream.current;\n      }\n\n      // Determine MIME type based on browser support\n      const mimeTypes = ['audio/webm;codecs=opus', 'audio/webm', 'audio/ogg;codecs=opus', 'audio/mp3'];\n      const supportedType = mimeTypes.find(type => MediaRecorder.isTypeSupported(type));\n      if (!supportedType) {\n        throw new Error('Your browser does not support any compatible audio format');\n      }\n\n      // Create media recorder\n      const options = {\n        mimeType: supportedType,\n        audioBitsPerSecond: 128000\n      };\n      mediaRecorder.current = new MediaRecorder(stream, options);\n      mediaRecorder.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunks.current.push(event.data);\n        }\n      };\n\n      // Get data every 30 seconds to ensure we don't lose data if browser crashes\n      mediaRecorder.current.start(30000);\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError(error.message || 'Error starting recording');\n      setIsRecording(false);\n\n      // Clean up any streams\n      if (micStream.current) {\n        micStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (systemStream.current) {\n        systemStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (combinedStream.current) {\n        combinedStream.current.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n  const stopRecording = async () => {\n    try {\n      if (!mediaRecorder.current || mediaRecorder.current.state === 'inactive') {\n        return;\n      }\n      setIsRecording(false);\n      setIsProcessing(true);\n\n      // Stop the recorder and get final chunk\n      mediaRecorder.current.stop();\n\n      // Wait for final dataavailable event\n      await new Promise(resolve => {\n        mediaRecorder.current.addEventListener('stop', resolve, {\n          once: true\n        });\n      });\n\n      // Stop all tracks in all streams\n      if (micStream.current) {\n        micStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (systemStream.current) {\n        systemStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (combinedStream.current) {\n        combinedStream.current.getTracks().forEach(track => track.stop());\n      }\n\n      // Create a single blob from all chunks\n      const audioBlob = new Blob(audioChunks.current, {\n        type: mediaRecorder.current.mimeType\n      });\n\n      // Upload recording\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n      formData.append('source', audioSource);\n      const response = await fetch(`${BACKEND_URL}/api/recordings`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to upload recording: ${errorText}`);\n      }\n      const result = await response.json();\n      setRecordingId(result.recording_id);\n\n      // Poll for completion\n      await pollRecordingStatus(result.recording_id);\n\n      // Refresh recordings list\n      await fetchRecordings();\n\n      // Reset\n      audioChunks.current = [];\n    } catch (error) {\n      console.error('Error stopping recording:', error);\n      setError(error.message || 'Error processing recording');\n    } finally {\n      setIsProcessing(false);\n      mediaRecorder.current = null;\n      micStream.current = null;\n      systemStream.current = null;\n      combinedStream.current = null;\n    }\n  };\n  const pollRecordingStatus = async id => {\n    let attempts = 0;\n    const maxAttempts = 120; // 2 minutes max waiting time (1 sec interval)\n\n    while (attempts < maxAttempts) {\n      try {\n        const statusResponse = await fetch(`${BACKEND_URL}/api/recordings/${id}`);\n        if (!statusResponse.ok) {\n          attempts++;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          continue;\n        }\n        const statusData = await statusResponse.json();\n\n        // If processing complete or failed, exit polling\n        if (statusData.status === 'completed' || statusData.status === 'failed') {\n          return statusData;\n        }\n\n        // If still processing, continue polling\n        attempts++;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (error) {\n        console.error('Error polling status:', error);\n        attempts++;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n    }\n    throw new Error('Transcription is taking longer than expected. Check recordings list for status.');\n  };\n  const deleteRecording = async id => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/recordings/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete recording');\n      }\n\n      // Update recordings list\n      setRecordings(recordings.filter(recording => recording.id !== id));\n    } catch (error) {\n      console.error('Error deleting recording:', error);\n      setError('Failed to delete recording');\n    }\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return [hours > 0 ? hours : null, minutes.toString().padStart(hours > 0 ? 2 : 1, '0'), secs.toString().padStart(2, '0')].filter(Boolean).join(':');\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900\",\n          children: \"\\u0939\\u093F\\u0902\\u0926\\u0940 \\u0911\\u0921\\u093F\\u092F\\u094B \\u091F\\u094D\\u0930\\u093E\\u0902\\u0938\\u0915\\u094D\\u0930\\u093F\\u092A\\u094D\\u0936\\u0928\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Record audio and transcribe Hindi in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center gap-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-3 h-3 rounded-full mr-2 ${deviceStatus.microphone === 'available' ? 'bg-green-500' : deviceStatus.microphone === 'unavailable' ? 'bg-red-500' : 'bg-yellow-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: deviceStatus.microphone === 'available' ? 'Microphone Ready' : deviceStatus.microphone === 'unavailable' ? 'Microphone Not Available' : 'Checking Microphone...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-3 h-3 rounded-full mr-2 ${deviceStatus.systemAudio === 'available' ? 'bg-green-500' : deviceStatus.systemAudio === 'unavailable' ? 'bg-red-500' : 'bg-yellow-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: deviceStatus.systemAudio === 'available' ? 'System Audio Ready' : deviceStatus.systemAudio === 'unavailable' ? 'System Audio Not Available' : 'Checking System Audio...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-flex rounded-md shadow-sm\",\n            role: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setAudioSource('microphone'),\n              disabled: deviceStatus.microphone !== 'available' || isRecording,\n              className: `px-4 py-2 text-sm font-medium ${deviceStatus.microphone !== 'available' ? 'opacity-50 cursor-not-allowed ' : ''} ${audioSource === 'microphone' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'} border border-gray-200 rounded-l-lg`,\n              children: \"Microphone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setAudioSource('system'),\n              disabled: deviceStatus.systemAudio !== 'available' || isRecording,\n              className: `px-4 py-2 text-sm font-medium ${deviceStatus.systemAudio !== 'available' ? 'opacity-50 cursor-not-allowed ' : ''} ${audioSource === 'system' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'} border-t border-b border-gray-200`,\n              children: \"System Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setAudioSource('combined'),\n              disabled: deviceStatus.microphone !== 'available' || deviceStatus.systemAudio !== 'available' || isRecording,\n              className: `px-4 py-2 text-sm font-medium ${deviceStatus.microphone !== 'available' || deviceStatus.systemAudio !== 'available' ? 'opacity-50 cursor-not-allowed ' : ''} ${audioSource === 'combined' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'} border border-gray-200 rounded-r-lg`,\n              children: \"Combined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border-l-4 border-red-400 p-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-5 w-5 text-red-400\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-red-700\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopRecording : startRecording,\n            disabled: audioSource === 'microphone' && deviceStatus.microphone !== 'available' || audioSource === 'system' && deviceStatus.systemAudio !== 'available' || audioSource === 'combined' && (deviceStatus.microphone !== 'available' || deviceStatus.systemAudio !== 'available') || isProcessing,\n            className: `relative inline-flex items-center px-6 py-3 rounded-full text-white font-medium transition-all ${isProcessing ? 'bg-gray-400 cursor-not-allowed' : isRecording ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'}`,\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true) : isRecording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"animate-pulse mr-2 text-red-200\",\n                children: \"\\u25CF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this), \"Stop Recording\"]\n            }, void 0, true) : 'Start Recording'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold text-gray-700\",\n              children: formatTime(recordingDuration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: audioSource === 'microphone' ? 'Recording from microphone' : audioSource === 'system' ? 'Recording system audio' : 'Recording microphone and system audio'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400 mt-1\",\n              children: \"For long recordings, processing may take several minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-6 flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Transcriptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchRecordings,\n            className: \"text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded\",\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: recordings.length > 0 ? recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded-lg p-4 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500\",\n                  children: formatDate(recording.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2 mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs px-2 py-0.5 bg-gray-100 rounded text-gray-700\",\n                    children: recording.source\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-600\",\n                    children: [Math.round(recording.duration), \"s\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs rounded-full ${recording.status === 'completed' ? 'bg-green-100 text-green-800' : recording.status === 'failed' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: recording.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteRecording(recording.id),\n                  className: \"text-gray-400 hover:text-red-500\",\n                  title: \"Delete recording\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-5 w-5\",\n                    viewBox: \"0 0 20 20\",\n                    fill: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      fillRule: \"evenodd\",\n                      d: \"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\",\n                      clipRule: \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 19\n            }, this), recording.status === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full bg-gray-200 rounded-full h-2.5\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 h-2.5 rounded-full\",\n                    style: {\n                      width: `${recording.progress}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [recording.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: [\"Processing chunk \", recording.chunks_processed, \" of \", recording.chunks_total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 21\n            }, this), recording.status === 'completed' && recording.transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded p-4 font-hindi\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-800 whitespace-pre-wrap text-base leading-relaxed\",\n                  children: recording.transcript\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => navigator.clipboard.writeText(recording.transcript),\n                  className: \"text-sm text-blue-600 hover:text-blue-800 flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 27\n                  }, this), \"Copy Text\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    const blob = new Blob([recording.transcript], {\n                      type: 'text/plain'\n                    });\n                    const url = URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = `transcription-${recording.id.substring(0, 8)}.txt`;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                    URL.revokeObjectURL(url);\n                  },\n                  className: \"text-sm text-blue-600 hover:text-blue-800 flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 27\n                  }, this), \"Download\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 21\n            }, this), recording.status === 'failed' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-50 p-4 rounded mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-700 text-sm\",\n                children: recording.error || 'Failed to process recording'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 21\n            }, this), recording.warning && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-yellow-50 p-3 rounded mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-yellow-700 text-xs\",\n                children: [\"Warning: \", recording.warning]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 21\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8 text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No recordings yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm mt-2\",\n              children: \"Start recording to see transcriptions here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"mt-8 text-center text-gray-500 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hindi Audio Transcription Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1\",\n          children: \"Powered by Sarvam AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lccJkYEDHRr27Gc9gvxvFhP1+yk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","App","_s","isRecording","setIsRecording","recordingId","setRecordingId","recordings","setRecordings","error","setError","deviceStatus","setDeviceStatus","microphone","systemAudio","recordingDuration","setRecordingDuration","audioSource","setAudioSource","isProcessing","setIsProcessing","mediaRecorder","audioChunks","durationTimer","micStream","systemStream","combinedStream","fetchRecordings","checkAudioDevices","current","setInterval","prev","clearInterval","response","fetch","ok","Error","data","json","console","navigator","mediaDevices","getUserMedia","stream","audio","echoCancellation","noiseSuppression","autoGainControl","getTracks","forEach","track","stop","err","name","getDisplayMedia","warn","getMicrophoneStream","getSystemAudioStream","video","getAudioTracks","length","getVideoTracks","message","startRecording","audioContext","AudioContext","micSource","createMediaStreamSource","systemSource","destination","createMediaStreamDestination","connect","mimeTypes","supportedType","find","type","MediaRecorder","isTypeSupported","options","mimeType","audioBitsPerSecond","ondataavailable","event","size","push","start","stopRecording","state","Promise","resolve","addEventListener","once","audioBlob","Blob","formData","FormData","append","method","body","errorText","text","result","recording_id","pollRecordingStatus","id","attempts","maxAttempts","statusResponse","setTimeout","statusData","status","deleteRecording","filter","recording","formatTime","seconds","hours","Math","floor","minutes","secs","toString","padStart","Boolean","join","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","disabled","viewBox","fill","fillRule","d","clipRule","xmlns","cx","cy","r","stroke","strokeWidth","map","timestamp","source","round","duration","title","style","width","progress","chunks_processed","chunks_total","transcript","clipboard","writeText","strokeLinecap","strokeLinejoin","blob","url","URL","createObjectURL","a","document","createElement","href","download","substring","appendChild","click","removeChild","revokeObjectURL","warning","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\n// Get API base URL from environment variable\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingId, setRecordingId] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState({\n    microphone: 'unchecked',\n    systemAudio: 'unchecked'\n  });\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [audioSource, setAudioSource] = useState('microphone'); // 'microphone', 'system', or 'combined'\n  const [isProcessing, setIsProcessing] = useState(false);\n  \n  // Recording references\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n  const durationTimer = useRef(null);\n  const micStream = useRef(null);\n  const systemStream = useRef(null);\n  const combinedStream = useRef(null);\n  \n  useEffect(() => {\n    fetchRecordings();\n    checkAudioDevices();\n  }, []);\n\n  useEffect(() => {\n    if (isRecording) {\n      durationTimer.current = setInterval(() => {\n        setRecordingDuration(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(durationTimer.current);\n      setRecordingDuration(0);\n    }\n    return () => clearInterval(durationTimer.current);\n  }, [isRecording]);\n\n  const fetchRecordings = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/recordings`);\n      if (!response.ok) throw new Error('Failed to fetch recordings');\n      const data = await response.json();\n      setRecordings(data.recordings || []);\n    } catch (error) {\n      console.error('Error fetching recordings:', error);\n      setError('Failed to load recordings. Please check your network connection.');\n    }\n  };\n\n  const checkAudioDevices = async () => {\n    try {\n      // Check browser support for basic audio\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setDeviceStatus({\n          microphone: 'unavailable',\n          systemAudio: 'unavailable'\n        });\n        setError('Audio recording is not supported in your browser. Please use Chrome, Firefox, or Edge.');\n        return false;\n      }\n\n      // Check microphone availability\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          }\n        });\n        \n        // Stop all tracks after checking\n        stream.getTracks().forEach(track => track.stop());\n        \n        setDeviceStatus(prev => ({\n          ...prev,\n          microphone: 'available'\n        }));\n      } catch (err) {\n        console.error('Microphone check error:', err);\n        \n        if (err.name === 'NotAllowedError' || err.name === 'PermissionDeniedError') {\n          setError('Microphone access denied. Please allow microphone access in your browser settings.');\n        } else {\n          setError('Could not access microphone. Please check your microphone connection.');\n        }\n        \n        setDeviceStatus(prev => ({\n          ...prev,\n          microphone: 'unavailable'\n        }));\n      }\n\n      // Check system audio availability (via desktop capture)\n      try {\n        if (navigator.mediaDevices.getDisplayMedia) {\n          setDeviceStatus(prev => ({\n            ...prev,\n            systemAudio: 'available'\n          }));\n        } else {\n          setDeviceStatus(prev => ({\n            ...prev,\n            systemAudio: 'unavailable'\n          }));\n          console.warn('System audio capture not supported in this browser');\n        }\n      } catch (err) {\n        console.error('System audio check error:', err);\n        setDeviceStatus(prev => ({\n          ...prev,\n          systemAudio: 'unavailable'\n        }));\n      }\n\n      return true;\n    } catch (err) {\n      console.error('Device check error:', err);\n      setError('Could not check audio devices. Please reload the page.');\n      setDeviceStatus({\n        microphone: 'unavailable',\n        systemAudio: 'unavailable'\n      });\n      return false;\n    }\n  };\n\n  const getMicrophoneStream = async () => {\n    try {\n      return await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n    } catch (err) {\n      console.error('Error getting microphone stream:', err);\n      throw new Error('Could not access microphone');\n    }\n  };\n\n  const getSystemAudioStream = async () => {\n    try {\n      // Request desktop capture with audio\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      \n      // If no audio track, throw error\n      if (!stream.getAudioTracks().length) {\n        stream.getTracks().forEach(track => track.stop());\n        throw new Error('No system audio selected. Please select \"Share audio\" when sharing your screen.');\n      }\n      \n      // Stop video tracks, we only need audio\n      stream.getVideoTracks().forEach(track => track.stop());\n      \n      return stream;\n    } catch (err) {\n      console.error('Error getting system audio stream:', err);\n      throw new Error(err.message || 'Could not access system audio');\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      setError(null);\n      audioChunks.current = [];\n      \n      // Stop any existing streams\n      if (micStream.current) {\n        micStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (systemStream.current) {\n        systemStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (combinedStream.current) {\n        combinedStream.current.getTracks().forEach(track => track.stop());\n      }\n      \n      micStream.current = null;\n      systemStream.current = null;\n      combinedStream.current = null;\n\n      let stream;\n      \n      // Get the appropriate stream based on audio source\n      if (audioSource === 'microphone') {\n        micStream.current = await getMicrophoneStream();\n        stream = micStream.current;\n      } \n      else if (audioSource === 'system') {\n        systemStream.current = await getSystemAudioStream();\n        stream = systemStream.current;\n      }\n      else if (audioSource === 'combined') {\n        // Get both streams\n        micStream.current = await getMicrophoneStream();\n        systemStream.current = await getSystemAudioStream();\n        \n        // Combine audio tracks from both streams\n        const audioContext = new AudioContext();\n        const micSource = audioContext.createMediaStreamSource(micStream.current);\n        const systemSource = audioContext.createMediaStreamSource(systemStream.current);\n        const destination = audioContext.createMediaStreamDestination();\n        \n        // Connect sources to destination\n        micSource.connect(destination);\n        systemSource.connect(destination);\n        \n        // Use the combined stream\n        combinedStream.current = destination.stream;\n        stream = combinedStream.current;\n      }\n\n      // Determine MIME type based on browser support\n      const mimeTypes = [\n        'audio/webm;codecs=opus',\n        'audio/webm',\n        'audio/ogg;codecs=opus',\n        'audio/mp3'\n      ];\n      \n      const supportedType = mimeTypes.find(type => MediaRecorder.isTypeSupported(type));\n      \n      if (!supportedType) {\n        throw new Error('Your browser does not support any compatible audio format');\n      }\n\n      // Create media recorder\n      const options = {\n        mimeType: supportedType,\n        audioBitsPerSecond: 128000\n      };\n      \n      mediaRecorder.current = new MediaRecorder(stream, options);\n      \n      mediaRecorder.current.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunks.current.push(event.data);\n        }\n      };\n      \n      // Get data every 30 seconds to ensure we don't lose data if browser crashes\n      mediaRecorder.current.start(30000);\n      setIsRecording(true);\n      \n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError(error.message || 'Error starting recording');\n      setIsRecording(false);\n      \n      // Clean up any streams\n      if (micStream.current) {\n        micStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (systemStream.current) {\n        systemStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (combinedStream.current) {\n        combinedStream.current.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n\n  const stopRecording = async () => {\n    try {\n      if (!mediaRecorder.current || mediaRecorder.current.state === 'inactive') {\n        return;\n      }\n\n      setIsRecording(false);\n      setIsProcessing(true);\n      \n      // Stop the recorder and get final chunk\n      mediaRecorder.current.stop();\n      \n      // Wait for final dataavailable event\n      await new Promise(resolve => {\n        mediaRecorder.current.addEventListener('stop', resolve, { once: true });\n      });\n      \n      // Stop all tracks in all streams\n      if (micStream.current) {\n        micStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (systemStream.current) {\n        systemStream.current.getTracks().forEach(track => track.stop());\n      }\n      if (combinedStream.current) {\n        combinedStream.current.getTracks().forEach(track => track.stop());\n      }\n\n      // Create a single blob from all chunks\n      const audioBlob = new Blob(audioChunks.current, { \n        type: mediaRecorder.current.mimeType \n      });\n\n      // Upload recording\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n      formData.append('source', audioSource);\n\n      const response = await fetch(`${BACKEND_URL}/api/recordings`, {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to upload recording: ${errorText}`);\n      }\n\n      const result = await response.json();\n      setRecordingId(result.recording_id);\n\n      // Poll for completion\n      await pollRecordingStatus(result.recording_id);\n      \n      // Refresh recordings list\n      await fetchRecordings();\n      \n      // Reset\n      audioChunks.current = [];\n\n    } catch (error) {\n      console.error('Error stopping recording:', error);\n      setError(error.message || 'Error processing recording');\n    } finally {\n      setIsProcessing(false);\n      mediaRecorder.current = null;\n      micStream.current = null;\n      systemStream.current = null;\n      combinedStream.current = null;\n    }\n  };\n\n  const pollRecordingStatus = async (id) => {\n    let attempts = 0;\n    const maxAttempts = 120; // 2 minutes max waiting time (1 sec interval)\n    \n    while (attempts < maxAttempts) {\n      try {\n        const statusResponse = await fetch(`${BACKEND_URL}/api/recordings/${id}`);\n        \n        if (!statusResponse.ok) {\n          attempts++;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          continue;\n        }\n        \n        const statusData = await statusResponse.json();\n        \n        // If processing complete or failed, exit polling\n        if (statusData.status === 'completed' || statusData.status === 'failed') {\n          return statusData;\n        }\n        \n        // If still processing, continue polling\n        attempts++;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (error) {\n        console.error('Error polling status:', error);\n        attempts++;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n    }\n    \n    throw new Error('Transcription is taking longer than expected. Check recordings list for status.');\n  };\n\n  const deleteRecording = async (id) => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/recordings/${id}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to delete recording');\n      }\n      \n      // Update recordings list\n      setRecordings(recordings.filter(recording => recording.id !== id));\n      \n    } catch (error) {\n      console.error('Error deleting recording:', error);\n      setError('Failed to delete recording');\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    \n    return [\n      hours > 0 ? hours : null,\n      minutes.toString().padStart(hours > 0 ? 2 : 1, '0'),\n      secs.toString().padStart(2, '0')\n    ].filter(Boolean).join(':');\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 font-sans\">\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">हिंदी ऑडियो ट्रांसक्रिप्शन</h1>\n          <p className=\"text-gray-600 mt-2\">Record audio and transcribe Hindi in real-time</p>\n        </header>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          {/* Device Status */}\n          <div className=\"flex items-center justify-center gap-4 mb-6\">\n            <div className=\"flex items-center\">\n              <div className={`w-3 h-3 rounded-full mr-2 ${\n                deviceStatus.microphone === 'available' ? 'bg-green-500' :\n                deviceStatus.microphone === 'unavailable' ? 'bg-red-500' :\n                'bg-yellow-500'\n              }`}></div>\n              <span className=\"text-sm text-gray-600\">\n                {deviceStatus.microphone === 'available' ? 'Microphone Ready' :\n                 deviceStatus.microphone === 'unavailable' ? 'Microphone Not Available' :\n                 'Checking Microphone...'}\n              </span>\n            </div>\n            \n            <div className=\"flex items-center\">\n              <div className={`w-3 h-3 rounded-full mr-2 ${\n                deviceStatus.systemAudio === 'available' ? 'bg-green-500' :\n                deviceStatus.systemAudio === 'unavailable' ? 'bg-red-500' :\n                'bg-yellow-500'\n              }`}></div>\n              <span className=\"text-sm text-gray-600\">\n                {deviceStatus.systemAudio === 'available' ? 'System Audio Ready' :\n                 deviceStatus.systemAudio === 'unavailable' ? 'System Audio Not Available' :\n                 'Checking System Audio...'}\n              </span>\n            </div>\n          </div>\n\n          {/* Audio Source Selection */}\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                onClick={() => setAudioSource('microphone')}\n                disabled={deviceStatus.microphone !== 'available' || isRecording}\n                className={`px-4 py-2 text-sm font-medium ${\n                  deviceStatus.microphone !== 'available' ? 'opacity-50 cursor-not-allowed ' : ''\n                } ${\n                  audioSource === 'microphone'\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border border-gray-200 rounded-l-lg`}\n              >\n                Microphone\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setAudioSource('system')}\n                disabled={deviceStatus.systemAudio !== 'available' || isRecording}\n                className={`px-4 py-2 text-sm font-medium ${\n                  deviceStatus.systemAudio !== 'available' ? 'opacity-50 cursor-not-allowed ' : ''\n                } ${\n                  audioSource === 'system'\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border-t border-b border-gray-200`}\n              >\n                System Audio\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setAudioSource('combined')}\n                disabled={deviceStatus.microphone !== 'available' || deviceStatus.systemAudio !== 'available' || isRecording}\n                className={`px-4 py-2 text-sm font-medium ${\n                  deviceStatus.microphone !== 'available' || deviceStatus.systemAudio !== 'available' \n                    ? 'opacity-50 cursor-not-allowed ' \n                    : ''\n                } ${\n                  audioSource === 'combined'\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border border-gray-200 rounded-r-lg`}\n              >\n                Combined\n              </button>\n            </div>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Recording Controls */}\n          <div className=\"flex flex-col items-center\">\n            <button\n              onClick={isRecording ? stopRecording : startRecording}\n              disabled={\n                (audioSource === 'microphone' && deviceStatus.microphone !== 'available') ||\n                (audioSource === 'system' && deviceStatus.systemAudio !== 'available') ||\n                (audioSource === 'combined' && (deviceStatus.microphone !== 'available' || deviceStatus.systemAudio !== 'available')) ||\n                isProcessing\n              }\n              className={`relative inline-flex items-center px-6 py-3 rounded-full text-white font-medium transition-all ${\n                isProcessing \n                  ? 'bg-gray-400 cursor-not-allowed'\n                  : isRecording\n                    ? 'bg-red-500 hover:bg-red-600'\n                    : 'bg-blue-500 hover:bg-blue-600'\n              }`}\n            >\n              {isProcessing ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Processing...\n                </>\n              ) : isRecording ? (\n                <>\n                  <span className=\"animate-pulse mr-2 text-red-200\">●</span>\n                  Stop Recording\n                </>\n              ) : (\n                'Start Recording'\n              )}\n            </button>\n\n            {isRecording && (\n              <div className=\"mt-4 text-center\">\n                <div className=\"text-lg font-semibold text-gray-700\">\n                  {formatTime(recordingDuration)}\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {audioSource === 'microphone' ? 'Recording from microphone' :\n                   audioSource === 'system' ? 'Recording system audio' :\n                   'Recording microphone and system audio'}\n                </p>\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  For long recordings, processing may take several minutes\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Transcriptions List */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-6 flex items-center justify-between\">\n            <span>Transcriptions</span>\n            <button \n              onClick={fetchRecordings}\n              className=\"text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded\"\n            >\n              Refresh\n            </button>\n          </h2>\n          <div className=\"space-y-6\">\n            {recordings.length > 0 ? (\n              recordings.map((recording) => (\n                <div key={recording.id} className=\"border rounded-lg p-4 shadow-sm\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">\n                        {formatDate(recording.timestamp)}\n                      </p>\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <p className=\"text-xs px-2 py-0.5 bg-gray-100 rounded text-gray-700\">\n                          {recording.source}\n                        </p>\n                        <p className=\"text-xs text-gray-600\">\n                          {Math.round(recording.duration)}s\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <span className={`px-2 py-1 text-xs rounded-full ${\n                        recording.status === 'completed' ? 'bg-green-100 text-green-800' :\n                        recording.status === 'failed' ? 'bg-red-100 text-red-800' :\n                        'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        {recording.status}\n                      </span>\n                      <button\n                        onClick={() => deleteRecording(recording.id)}\n                        className=\"text-gray-400 hover:text-red-500\"\n                        title=\"Delete recording\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  {recording.status === 'processing' && (\n                    <div className=\"mt-3\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                          <div \n                            className=\"bg-blue-600 h-2.5 rounded-full\" \n                            style={{ width: `${recording.progress}%` }}\n                          ></div>\n                        </div>\n                        <span className=\"ml-2 text-xs text-gray-500\">\n                          {recording.progress}%\n                        </span>\n                      </div>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Processing chunk {recording.chunks_processed} of {recording.chunks_total}\n                      </p>\n                    </div>\n                  )}\n\n                  {recording.status === 'completed' && recording.transcript && (\n                    <div className=\"mt-3\">\n                      <div className=\"bg-gray-50 rounded p-4 font-hindi\">\n                        <p className=\"text-gray-800 whitespace-pre-wrap text-base leading-relaxed\">\n                          {recording.transcript}\n                        </p>\n                      </div>\n                      <div className=\"mt-2 flex gap-2\">\n                        <button \n                          onClick={() => navigator.clipboard.writeText(recording.transcript)}\n                          className=\"text-sm text-blue-600 hover:text-blue-800 flex items-center\"\n                        >\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n                          </svg>\n                          Copy Text\n                        </button>\n                        <button \n                          onClick={() => {\n                            const blob = new Blob([recording.transcript], { type: 'text/plain' });\n                            const url = URL.createObjectURL(blob);\n                            const a = document.createElement('a');\n                            a.href = url;\n                            a.download = `transcription-${recording.id.substring(0, 8)}.txt`;\n                            document.body.appendChild(a);\n                            a.click();\n                            document.body.removeChild(a);\n                            URL.revokeObjectURL(url);\n                          }}\n                          className=\"text-sm text-blue-600 hover:text-blue-800 flex items-center\"\n                        >\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                          </svg>\n                          Download\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {recording.status === 'failed' && (\n                    <div className=\"bg-red-50 p-4 rounded mt-3\">\n                      <p className=\"text-red-700 text-sm\">\n                        {recording.error || 'Failed to process recording'}\n                      </p>\n                    </div>\n                  )}\n\n                  {recording.warning && (\n                    <div className=\"bg-yellow-50 p-3 rounded mt-3\">\n                      <p className=\"text-yellow-700 text-xs\">\n                        Warning: {recording.warning}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              ))\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>No recordings yet</p>\n                <p className=\"text-sm mt-2\">Start recording to see transcriptions here</p>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <footer className=\"mt-8 text-center text-gray-500 text-sm\">\n          <p>Hindi Audio Transcription Tool</p>\n          <p className=\"mt-1\">Powered by Sarvam AI</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}